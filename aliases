#/usr/bin/env sh
e() {
  mvim --servername vim --remote-silent "$@"
}
alias ec="mvim --servername vim"

m() {
  mkdir $1 && cd $1
}

o() {
  env open "$1" &> /dev/null &
}

untar() {
  tar -zxvf $1
}

# f() {
# ag --depth 3 --smart-case --hidden --follow -g "." | fzf -e
# }

orphans() {
  if [[ ! -n $(pkg-list_true_orphans) ]]; then
    echo "No orphans to remove."
  else
    sudo pacman -Rns $(pkg-list_true_orphans)
  fi
}

I() {
  PKGEXT=.tar apacman -S --noconfirm $1
}
alias i='PKGEXT=.tar apacman --noconfirm'


alias c="cd"
alias h="history | tail -n 50"

alias gs='git status'
alias rm='rmtrash'
alias upd='sudo pacman-key --refresh-keys && PKGEXT=.tar apacman -Syu --progress --purgebuild --skiptest --noconfirm'
alias upd-noaur='apacman -Syu --noaur --progress --purgebuild --skiptest --noconfirm'
alias upd-aur='apacman -Syu --auronly --progress --purgebuild --skiptest --noconfirm'
alias R='source ~/.zshrc'

# alias ls='ls --color=auto'
alias ll='ls -o -hX --group-directories-first'
alias ..='cd ..'
alias ...='cd ../../..'
alias ....='cd ../../../..'

alias pnig='while { true } { sleep 2; ping www.google.com  }'
alias ping='while { true } { sleep 2; ping www.google.com  }'

alias recent="ls -1t | head -30"
alias vimprofile="gvim --startuptime vim.log && cat vim.log | sort -k 2"

alias disk-usage="sudo du -h / 2> /dev/null | grep -P '^[0-9\.]+G'"
alias disk-usage-here="sudo du -hsx * | sort -rh | head -10"
alias w="which"
alias npmi="npm install --save --save-exact"
alias npmid="npm install --save-dev --save-exact"
alias npmig="sudo npm install -g"

alias goo='chromium'
# alias diff-configs="fs=('01-api-server' '02-auth-server' '03-website' '04-admin' '05-service-web-client'); for f in $fs; do echo $f; echo '-------------'; colordiff -y <(cat config/$f.json | jq '.apps[0].env' | json -k) <(cat deployment/config/$f-int.json | jq '.apps[0].env' | json -k); done"

alias git-clean-remote='git remote prune origin'
alias loc="find . -type f | xargs wc -l | sort -k 1 -g"

# calc stuff
= () {
    echo "$(($@))"
}
alias vim-update='vim -c "silent VAMUpdateActivated"'

alias pac='(cd /home/jwerner/prod/pac >/dev/null && npm start)'
alias prettyjson='python -m json.tool'
alias weather="curl wttr.in"

# Use perl regexes for grepping
alias grep="grep -P"

# npm check updates
# npm-check-updates / ncu
# alias rn-start="adb shell monkey -p com.veloyonative 1"
alias rn-reload="adb shell input keyevent 82 && sleep 0.3 && adb shell input keyevent 20 23"
alias rn-debug="adb shell input keyevent 82 && sleep 0.3 && adb shell input keyevent 20 20 23"
alias rn-menu="adb shell input keyevent 82"
alias rn-stop="adb shell am force-stop com.veloyonative"
alias rn-log="adb logcat *:S ReactNative:I ReactNativeJS:I"
alias rn-start="watchman watch-del-all && watchman-setup && export NODE_ENV=native && react-native start"
# alias npm="pnpm"
alias g="git"
alias ws="nohup ~/bin/WebStorm-145.184.5/bin/webstorm.sh"

# docker run --rm -it -e CONFIGURATION=/etc/veloyo/overlays/wish-website.json -v /etc/veloyo:/etc/veloyo -v /var/cache/veloyo:/var/cache/veloyo hub.veloyo.com:5000/veloyo/wish-website:a31feea npm run updateCache

alias npm-wish="npm --userconfig=~/veloyo/.npmrc"
alias npm-setup="npm install --save-dev babel-cli babel-core babel-preset-es2015 babel-preset-stage-1 babel-register codecov eslint eslint-config-jonathanewerner ghooks npm-run-all nyc rimraf with-package mocha babel-plugin-espower power-assert"

alias wish-api='cd ~/wish/wish/api && NODE_ENV=development nodemon index.js | bunyan -c "!this.req" -L -o short'
alias wish-auth='cd ~/wish/wish/auth && NODE_ENV=develompent forever --uid auth -a start index.js'
alias wish-service='cd ~/wish/wish/service && forever --uid service -a start build/server/server.js start'
alias wish-partner='cd ~/wish/wish/partner && forever --uid partner -a start build/server/server.js start'
alias wish-admin='cd ~/wish/wish/admin && forever --uid admin -a start build/server/server.js start'
alias wish-docs='cd ~/wish/wish/docs && forever --uid docs -a start build/server/server.js start'
alias wish-website='cd ~/wish/wish/website && forever --uid website -a start build/server/server.js start'
alias wish-wish-website='cd ~/wish/wish/wish-website && forever --uid wish-website -a start build/server/server.js start'
alias tail='tail -q'
npm-sync() {
	moduleName=$(basename $(pwd))
	to=$1
	sane "/usr/bin/rsync -a --exclude .git --exclude examples --exclude node_modules ./ $to/node_modules/$moduleName" . --glob='{package.json,modules/**/*.js}'
}
npm-sync-react-router-native() {
 (cd ~/projects/react-router-native && npm-sync ~/wish/wish/partner)
}
wish-clear-logs() {
	ps=('admin' 'api' 'auth' 'docs' 'partner' 'service' 'website' 'wish-website')
	for p in $ps; do
		echo '' >! ~/.forever/$p.log
	done
}

wish-logs() {
  wish-clear-logs
	tail -q -f ~/.forever/*.log | bunyan -c '!this.req' -L -o short
}
wish-logs-with-reqs() {
  wish-clear-logs
	tail -q -f ~/.forever/*.log | bunyan -L -o short
}
alias pm2-logs-with-reqs="pm2 logs --raw | bunyan -L"

# Remove zsh weirdness when dealing with curl
alias curl="noglob curl"
ls-last() {
	ls -lt "$@" | head -n1
}

# ‚ùØ ag "^import.+wish-react-[\w-]+" --nofilename | grep -o "wish-react-[\w-]+" | sort |  uniq | sed "s/^/'/" | sed "s/$/',/"
add() {
  # (cd ~/wish/wish/packages/$1 && peerlink && cd ~/wish/wish/partner && npm run updatePackageJson && npm run install:native && peerlink $1)
  (cd ~/wish/wish/packages/$1 && peerlink && cd ~/wish/wish/partner && peerlink $1)
}

push() {
  fastlane codepush environment:"int" variant_name:"hermes" && fastlane codepush environment:"int" variant_name:"veloyo"
}

font-update() {
		env cp -rf ~/Downloads/fontello/config.json ~/wish/wish/packages/wish-react-svg/iconFontConfig.ios.json
		env cp -rf ~/Downloads/fontello/config.json ~/wish/wish/partner/node_modules/wish-react-svg/iconFontConfig.ios.json
		env cp -rf ~/Downloads/fontello/config.json ~/wish/wish/partner/ios/assets/icon-font/hermes-partner/config.json
		env cp -rf ~/Downloads/fontello/font/fontello.ttf ~/wish/wish/partner/ios/assets/icon-font/hermes-partner/fontello.ttf
		env cp -rf ~/Downloads/fontello/font/fontello.ttf ~/wish/wish/partner/ios
}
