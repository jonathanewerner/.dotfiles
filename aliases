#/usr/bin/env sh
alias ec="macvim --servername vim"

o() {
  env open "$1" &> /dev/null &
}

untar() {
  tar -zxvf $1
}

alias c="cd"
alias h="history | tail -n 50"

alias gs='git status'
alias g="git"
alias rm='rmtrash'
alias R='source ~/.zshrc'

alias recent="ls -1t | head -30"
alias vim-profile="gvim --startuptime vim.log && cat vim.log | sort -k 2"
alias vim-update='vim -c "silent VAMUpdateActivated"'

alias disk-usage="sudo du -h / 2> /dev/null | grep -P '^[0-9\.]+G'"
alias disk-usage-here="sudo du -hsx * | sort -rh | head -10"
alias w="which"

alias loc="find . -type f | xargs wc -l | sort -k 1 -g"

# calc stuff
= () {
    echo "$(($@))"
}

# Use perl regexes for grepping
alias grep="grep -P"

# alias rn-reload="adb shell input keyevent 82 && sleep 0.3 && adb shell input keyevent 20 23"
# alias rn-debug="adb shell input keyevent 82 && sleep 0.3 && adb shell input keyevent 20 20 23"
# alias rn-menu="adb shell input keyevent 82"
# alias rn-stop="adb shell am force-stop com.veloyonative"
# alias rn-log="adb logcat *:S ReactNative:I ReactNativeJS:I"
# alias rn-start="watchman watch-del-all && watchman-setup && export NODE_ENV=native && react-native start --skipflow --verbose"
# alias rn-start-fresh="watchman watch-del-all && watchman-setup && export NODE_ENV=native && react-native start --skipflow --verbose --reset-cache"
# alias npm="pnpm"

alias tail='tail -q'

# Remove zsh weirdness when dealing with curl
alias curl="noglob curl"

preview () {
    if [ -z "$*" ]; then
        echo "Usage: preview [FILE]"
    else
        open -f -a /Applications/Preview.app
    fi
}

# interactive killing of apps
alias fkill='fkill'

MESAIC_CFG=":./config/locals.yaml:./config/dev.yaml:~/mesaic/mesaic/packages/mesaic-client-config/dev.yaml"
alias mesaic-admin="cd ~/mesaic/mesaic/admin && CONFIGURATION=:./config/locals.yaml:./config/dev.yaml:~/mesaic/mesaic/packages/mesaic-client-config/dev.yaml node ./build/server/server start | bunyan -c '(!this.req || this.err) && !/gm/.test(this.msg)' -L"
BUNYAN_CFG="(!this.req || this.err) && !/gm/.test(this.msg)"

alias m-api="cd ~/mesaic/mesaic/api >/dev/null && CONFIGURATION=./config/locals.yaml:./config/dev.yaml node index.js | bunyan -c '$BUNYAN_CFG' -L -o short"
alias m-admin="cd ~/mesaic/mesaic/admin >/dev/null && VERSION=foo CONFIGURATION=~/mesaic/additional-configs/admin-siteadmin.json:$MESAIC_CFG node ./build/server/server start | bunyan -c '$BUNYAN_CFG' -L -o short"
alias m-admin-build-prod="cd ~/mesaic/mesaic/admin >/dev/null && rm build/cache && rm build/server; VERSION=foo npm run buildServer && CONFIGURATION=~/mesaic/additional-configs/admin-siteadmin.json:$MESAIC_CFG VERSION=foo npm run buildClient -- --variant 549d8c2e-9e4f-4ee8-9f37-fe329dabe5eb"
alias m-admin-fresh="cd ~/mesaic/mesaic/admin && npm run buildServerDev && m-admin"


alias m-service="cd ~/mesaic/mesaic/service >/dev/null && CONFIGURATION=$MESAIC_CFG node ./build/server/server start | bunyan -c '$BUNYAN_CFG' -L -o short"
alias m-service-fresh="cd ~/mesaic/mesaic/service && npm run buildServerDev && m-service"
alias m-partner="cd ~/mesaic/mesaic/service >/dev/null && CONFIGURATION=/Users/jwerner/mesaic/additional-configs/service-partner.json:$MESAIC_CFG node ./build/server/server start | bunyan -c '$BUNYAN_CFG' -L -o short"

mesaic-perf-admin() {
	cd ~/mesaic/mesaic/admin
  rm node_modules/.cache
	rm build/cache
	rm build/server
	npm run buildServer
	CONFIGURATION=../packages/mesaic-client-config/dev.yaml:./config/locals.yaml npm run buildClient -- --variant f81c463b-a7a1-4198-b41c-0ca54c0ebf75
  source-map-explorer build/cache/admin/app-*.js
}

alias mesaic-my-commits="rm /tmp/commits.txt; g log --oneline --pretty=format:'%h | %<(80,trunc)%s | %cr %an' --abbrev-commit | grep Jonathan |  sed -e 's/\s\+Jonathan.\+//' > /tmp/commits.txt; e /tmp/commits.txt"
alias mesaic-loc='mesaic-loc ~/wish/wish'
alias kill-dangling-chromes='ps aux | grep "Google\ Chrome.+\-\-disable-notifications" | grep -v grep | awk "{print $2}" | xargs -n1 kill'
# m-recent-reqs() {
# 	awslogs get clusterA/api --start="30m ago" --filter-pattern '{ ($.name = "api") && ($.hostname = "production*") && ($.req_id = *) && ($.req.headers.user-agent != ELB-HealthChecker*) && ($.req.url != "/status") && ($.req.url != '\*FetchVariantsQuery\*')}' | sed -e 's/^[^\{]\+//g' | bunyan -o json | jq '.req.url' | sort | uniq -c | sort -nr | sed 's/\"//g'
# }
#
# m-prs() {
#   FILE=~/mesaic/changelog/$(date '+%Y-%m-%d%n').txt
#   node ~/mesaic/scripts/prs-merged-since-last-live-deploy >| $FILE && e $FILE
# }
# alias m-kube-top-all-pods='kubectl --context cluster-a.mesaic.io top pods --all-namespaces | grep -vP "(kube-|default-http|nginx-ingress)" | sort'
# alias m-kube-nodes-resource-usage='kubectl --context cluster-a.mesaic.io top node'
# alias m-kube-pods'kubectl --context cluster-a.mesaic.io get pods -o wide --all-namespaces | grep -vP "(kube-|default-http|nginx-ingress)"'
# alias m-kube-pods-for-node='kubectl --context cluster-a.mesaic.io get pods -o wide --all-namespaces | grep'
# alias m-kube-nodes-cpu-utilisation='kubectl --context cluster-a.mesaic.io get nodes | grep node | awk '\''{print $1}'\'' | xargs -I {} sh -c '\''echo   {} ; kubectl --context cluster-a.mesaic.io describe node {} | grep Allocated -A 5 | grep -ve Event -ve Allocated -ve percent -ve -- ; echo '\'''
# function m-kube-avg-memory-for-project() {
#   project=$1
#   kubectl --context cluster-a.mesaic.io top pods --all-namespaces | grep -vP "(kube-|default-http|nginx-ingress)" | sort | grep $project | awk '{ print $4 }' | sed 's/Mi//' | jq -s 'add/length'
# }
# function m-kube-avg-cpu-for-project() {
#   project=$1
#   kubectl --context cluster-a.mesaic.io top pods --all-namespaces | grep -vP "(kube-|default-http|nginx-ingress)" | sort | grep $project | awk '{ print $3 }' | sed 's/m//' | jq -s 'add/length'
# }
#
# function m-kube-cluster-ram() {
#   AVG_RAM=$(m-kube-nodes-resource-usage | awk '{ print $4 }' | tail -n +2 | sed 's/\Mi//' | jq -s 'add/length')
#   echo ${AVG_RAM}MB avg
# }
#
# function m-kube-cluster-cpu() {
#   AVG_CPU=$(m-kube-nodes-resource-usage | awk '{ print $3 }' | tail -n +2 | sed 's/\%//' | jq -s 'add/length')
#   echo ${AVG_CPU}% avg
# }
#
# m-load-last-run() {
#   cd ~/mesaic/mesaic/load-testing/results
#   cat $(ls -ht | grep -v _vis | head -n1) | jq '.results[] | {apiCount: .input.apiCount, c: .input.c, requests: .input.requests, cAPI: .input.concurrentUserSessionsPerApi}'
# }

function getcpid() {
    cpids=`pgrep -P $1|xargs`
		echo "[$1 (main)] $(ps -o rss -p $1 | tail -n1)"

    for cpid in $cpids;
    do
        echo "[$cpid] $(ps -o rss -p $cpid | tail -n1)"
        # getcpid $cpid
    done
		echo '-------------'

}
alias remove-color="sed -i -r 's/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]//g"
git-clean() {
	git remote prune origin && git branch --merged master | grep -v 'master' | xargs git branch -d
}
pip3='python3 -m pip'
alias serve='python -m SimpleHTTPServer'
function emulator { cd /Users/jwerner/Library/Android/Sdk/tools && ./emulator "$@" &; }
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'

e() {
  macvim --servername vim --remote-silent "$@"
}

alias date1='date +"%Y%m%d%H%M%S"'

f() {
	rg --files --glob "" | fzf
}
